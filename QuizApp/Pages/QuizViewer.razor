// Pages/QuizView.razor

@page "/quizViewer"

    @using QuizApp.Data
    @inject QuizService QuizRepository

    <h1>Let's start with the quiz</h1>
    <p>Your current score is @currentScore</p>

    @if (quiz == null)
    {
        <p><em>Starting Quiz....</em></p>
    }
    else
    {
        int quizIndex = 0;
        @foreach (var QuizList in quiz)
        {
            <section>
                <h3>@QuizList.Question</h3>
                <div class="form-check">
                    @{
                        int choiceIndex = 0;
                        quizScores.Add(0);
                    }
                    @foreach (var choice in QuizList.Choices)
                    {
                        int currentQuizIndex = quizIndex;
                        <input class="form-check-input" type="radio" name="@quizIndex"
                               value="@choiceIndex" @onchange="@((eventArgs) =>
                        UpdateScore(Convert.ToInt32(eventArgs.Value), currentQuizIndex))" />@choice<br>

                        choiceIndex++;
                    }
                </div>
            </section>

            quizIndex++;
        }
    }

    @code {
        List<QuizList> quiz;
        List<int> quizScores = new List<int>();
        int currentScore = 0;

        protected override async Task OnInitializedAsync()
        {
            quiz = await QuizRepository.GetQuizAsync();
        }

        void UpdateScore(int chosenAnswerIndex, int quizIndex)
        {
            var QuizList = quiz[quizIndex];

            if (chosenAnswerIndex == QuizList.AnswerIndex)
            {
                quizScores[quizIndex] = QuizList.Score;
            }
            else
            {
                quizScores[quizIndex] = 0;
            }
            currentScore = quizScores.Sum();
        }
    }